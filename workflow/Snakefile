import glob
import os
import re
configfile: "config/config.yaml"

include: "rules/common.smk"
include: "rules/qc.smk"
include: "rules/load_db.smk"
include: "rules/simsearch_and_process.smk"
include: "rules/create_boxplots.smk"
include: "rules/abundance.smk"
include: "rules/preprocess.smk"

# Build a list of all "fastq.gz" files in "/ERMA/data/fastq" which will be processed subsequently
samples = [os.path.basename(f).replace(".fastq.gz", "") for f in glob.glob(os.path.join(config["base_dir"], "data", "fastq", "*.fastq.gz"))]
runname = "".join(config["runname"])
seq_tech = "".join(config["seq_tech"])

print(f"Run: {runname} with detected sequence technology: {seq_tech}\nDetected samples: {samples}")

rule all:
    input:
        f"results/{runname}_report.zip"  

report: "../report/workflow.rst"

rule snakemake_report:
    input:              
        local("results/abundance/combined_genus_abundance_bubbleplot.html"),
        local("results/abundance/reads_per_found_AMR.html"),
        local("results/boxplots/combined_allength_boxplot.png"),        
        local("results/boxplots/combined_evalue_boxplot.png"),        
        local("results/boxplots/combined_percidt_boxplot.png"),        
        local("results/qc/multiqc.html"),
        local("results/qc/overview_plot.png"),
        local(expand("results/{sample}/overview_table.html",sample=samples)),
        local(expand("results/{sample}/genus_abundance.html", sample=samples)),        
        local(expand("results/{sample}/genus_idt_per_genus_plot.png", sample=samples)),        
    log:
        local("logs/report/report.log"),
    conda:
        "envs/snakemake.yaml"
    output:
        f"results/{runname}_report.zip"     
    shell:
        "snakemake --nolock --report {output} --report-stylesheet config/custom-stylesheet.css 2>> {log}"