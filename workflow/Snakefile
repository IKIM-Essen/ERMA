import glob
import os
import re
configfile: "config/config.yaml"

include: "rules/blast_and_process.smk"
include: "rules/common.smk"
include: "rules/create_boxplots.smk"
include: "rules/load_db.smk"
include: "rules/main_results.smk"
include: "rules/preprocess.smk"
include: "rules/qc.smk"

# Build a list of all "fastq.gz" files in "/ERMA/data/fastq" which will be processed subsequently
reads = [os.path.basename(f).replace(".fastq.gz", "") for f in glob.glob(os.path.join(config["base_dir"], "data", "fastq", "*.fastq.gz"))]

# Retrieve sample names. For Illumina this is done by splitting at _R1_/_R2_ ...
if config["seq_tech"] == "Illumina":
    samples = list(set(re.split(r'_R\d_', r)[0] for r in reads))
elif config["seq_tech"] == "ONT":
    samples = reads
else:
    raise ValueError("Invalid sequencing technology specified. Check config file and README.")

runname = config["runname"]
print(f"Run: {runname}\nDetected samples: {samples}")

rule all:
    input:
        f"results/{runname}_report.zip"

rule snakemake_report:
    input:       
        expand("{base_dir}/results/{sample}/genus_distribution_plot.html", sample=samples,base_dir=config["base_dir"]),        
        expand("{base_dir}/results/{sample}/genus_idt_per_genus_plot.png", sample=samples,base_dir=config["base_dir"]),        
        expand("{base_dir}/results/abundance/combined_genus_abundance_bubbleplot.html", base_dir=config["base_dir"]),            
        expand("{base_dir}/results/abundance/reads_per_found_AMR.csv", base_dir=config["base_dir"]),            
        expand("{base_dir}/results/boxplots/combined_evalue_boxplot.png", base_dir=config["base_dir"]),        
        expand("{base_dir}/results/boxplots/combined_percidt_boxplot.png", base_dir=config["base_dir"]),        
        expand("{base_dir}/results/boxplots/combined_allength_boxplot.png", base_dir=config["base_dir"]),        
        expand("{base_dir}/results/qc/multiqc.html", base_dir=config["base_dir"]),        
    output:
        f"results/{runname}_report.zip"     
    shell:
        "snakemake --nolock --report {output} --report-stylesheet config/custom-stylesheet.css"